{
  "name": "grunt-dentist",
  "description": "Wisdom extraction from script tags",
  "version": "0.3.4",
  "homepage": "https://github.com/julescarbon/grunt-dentist",
  "author": {
    "name": "Julie Lala",
    "email": "jules@okfoc.us",
    "url": "http://okfoc.us/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/julescarbon/grunt-dentist.git"
  },
  "bugs": {
    "url": "https://github.com/julescarbon/grunt-dentist/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/julescarbon/grunt-dentist/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "htmlparser2": ""
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.2"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-dentist\n\nThis plugin will remove inline Javascript and CSS from your HTML and dump them to a new file, to be incorporated into your build process.\n\nIt can erase any `script` tags pointed at local assets, and replace the lot with single `script` tag pointed at a minified file.  Likewise, it can erase any `style` and local `link rel='stylesheet'` tags and replace them with a single `link` tag.\n\nAdditionally, it knows to avoid templates and anything else which may be inlined using `script` tags.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.2`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-dentist --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-dentist');\n```\n\n## The \"dentist\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `dentist` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  dentist: {\n    options: {\n      include_js: \"/app.min.js\",\n      include_css: \"/app.css\",\n      clear_scripts: true,\n      clear_stylesheets: true,\n      clear_comments: true,\n      strip_whitespace: true\n    },\n    dist: {\n      src: 'docs/index.html',\n      dest_js: 'prod/js/inline.js',\n      dest_css: 'prod/css/inline.css',\n      dest_html: 'prod/index.html',\n    },\n  },\n});\n```\n\n### Options\n\n#### options.include_js\nType: `String`\nDefault value: `app.min.js`\n\nThe dentist will insert a single `script` tag into your HTML, preferably above the closing `</body>` tag.  Point this at your minified Javascript file.  Note that this file is not created by the dentist; it is your job to make sure it exists after further concat/minify tasks.\n\nIf set to null, the tag is not included.\n\n#### options.include_css\nType: `String`\nDefault value: `app.css`\n\nThe dentist will insert a single `link` tag into your HTML, preferably above the closing `</head>` tag.  Point this at your minified CSS.  Likewise, the dentist does not necessarily create this file.\n\nIf set to null, the tag is not included.\n\n#### options.clear_scripts\nType: `Boolean`\nDefault value: `true`\n\nThe dentist will remove any local Javascript references it finds.  Any `script` tag not pointed at an external file will be excised.\n\n#### options.clear_stylesheets\nType: `Boolean`\nDefault value: `true`\n\nThe dentist will remove any local stylesheet references it finds.  Any `link rel='stylesheet'` tag not pointed at an external file will be excised.\n\n#### options.clear_comments\nType: `Boolean`\nDefault value: `true`\n\nThe dentist will remove any HTML comments it finds.  Legacy IE \"conditional\" comments will be preserved, as will multiline comments.\n\n#### options.strip_whitespace\nType: `Boolean`\nDefault value: `true`\n\nThe dentist will elide any extraneous whitespace (_horror vacui_) in the output files.\n\n### Usage\n\nThe script takes one `src` HTML file as input, and outputs any inline JS to the file marked `dest_js`, inline CSS to `dest_css`, and the cleaned HTML to `dest_html`.  If any of the destination files are unspecified, they are not processed.  For instance this task extracts inlined scripts only but does not touch HTML or CSS:\n\n```js\ngrunt.initConfig({\n  dentist: {\n    extract: {\n      files: {\n        src: 'docs/index.html',\n        dest_js: 'prod/js/app.init.js',\n      }\n    },\n  },\n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using the suppiled [Gruntfile](http://gruntjs.com/).\n\nAnd don't forget to floss!\n\n## Release History\n* v0.3.4 - 23 February 2014 - preserve multiline comments\n* v0.3.2 - 30 January 2014 - added style tag support, clearing comments\n* v0.2.0 - 28 January 2014 - post-publish fixes\n* v0.1.0 - 28 January 2014 - first release.\n\n\n",
  "readmeFilename": "README.md",
  "_id": "grunt-dentist@0.3.4",
  "_from": "grunt-dentist@"
}
